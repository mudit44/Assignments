rm(list = ls())
backorders_data <- read.csv("BackOrders.csv" , header = T )
setwd("C:/Users/Mudit/Desktop/INSOFE/HOTe2/Batch40_CSE_7302c_HOTe02_Logistic_Regression")
backorders_data <- read.csv("BackOrders.csv" , header = T )
#No missing values in data frame
sum(is.na(backorders_data))
colnames(backorders_data)
backorders_data$went_on_backorder <- ifelse(backorders_data$went_on_backorder=="Yes" ,1 ,0)
str(backorders_data)
#Converting it into Factor
backorders_data$went_on_backorder <- as.factor(as.character(backorders_data$went_on_backorder))
#splitting data into train and test set
set.seed(123)
library(caret)
train_rows <- createDataPartition(backorders_data$went_on_backorder , p = 0.7 , list = F)
train <- backorders_data[train_rows , ]
test <- backorders_data[-train_rows ,]
str(train)
### Building a basic Logistic Regression Model
log_reg <- glm(went_on_backorder~., data = train, family = binomial)
summary(log_reg)
train_preds <- predict(log_reg, train , type="response")
# By default if no dataset is mentioned, training data is used
test_preds <- predict(log_reg, test, type="response") # Predicting on test data
library(ROCR)
pred <- prediction(train_preds, train$went_on_backorder)
perf <- performance(pred, measure="tpr", x.measure="fpr")
#Plot the ROC curve using the extracted performance measures (TPR and FPR)
plot(perf, col=rainbow(10), colorize=T, print.cutoffs.at=seq(0,1,0.05))
perf_auc <- performance(pred, measure="auc")
auc <- perf_auc@y.values[[1]]
print(auc)
pred_class <- ifelse(train_preds > 0.1, 1, 0)
table(train$went_on_backorder,pred_class)
preds_val <- ifelse(test_preds > 0.1, 1, 0)
table(preds_val)
conf_matrix <- table(test$went_on_backorder, preds_val)
print(conf_matrix)
specificity <- conf_matrix[1, 1]/sum(conf_matrix[1, ])
sensitivity <- conf_matrix[2, 2]/sum(conf_matrix[2, ])
accuracy <- sum(diag(conf_matrix))/sum(conf_matrix)
library(caret)
# Using the argument "Positive", we can get the evaluation metrics according to our positive #referene level
confusionMatrix(test_preds, test$y,positive="1")
summary(log_reg)
